name: Cache Key Check
description: Check if a cache key or prefix would generate a hit if it would have been restored
inputs:
  key:
    description: An explicit key or prefix for identifying the cache
    required: false
    default: ''
  repo-token:
    description: Token to use to authorize actions API access. Typically the GITHUB_TOKEN secret, with actions:read access
    required: false
outputs:
  cache-hit:
    description: A boolean value to indicate a match was found for the key or prefix.
    value: ${{ steps.cache-hit.outputs.cache-hit }}

runs:
  using: "composite"
  steps:
    - name: Check for cache hit on exact ref
      # refs/heads/<branch_name>
      # refs/pull/<pr_number>/merge
      # refs/tags/<tag_name>
      uses: pascallj/cache-key-check/.github/actions/api-cache-hit@v1
      id: cache-hit-ref
      with:
        key: ${{ inputs.key }}
        ref: ${{ github.ref }}
        repo-token: ${{ inputs.repo-token }}

    - name: Check for cache hit on head_ref (PR)
      # <branch_name> (source of PR)
      if: |
        ! (steps.cache-hit-ref.outputs.cache-hit == 'true') &&
        github.head_ref
      uses: pascallj/cache-key-check/.github/actions/api-cache-hit@v1
      id: cache-hit-head-ref
      with:
        key: ${{ inputs.key }}
        ref: refs/heads/${{ github.head_ref }}
        repo-token: ${{ inputs.repo-token }}

    - name: Check for cache hit on PR base
      # <branch_name> (base of PR)
      if: |
        ! (steps.cache-hit-ref.outputs.cache-hit == 'true') &&
        ! (steps.cache-hit-head-ref.outputs.cache-hit == 'true') &&
        github.event.pull_request.base.ref
      uses: pascallj/cache-key-check/.github/actions/api-cache-hit@v1
      id: cache-hit-pr-base
      with:
        key: ${{ inputs.key }}
        ref: refs/heads/${{ github.event.pull_request.base.ref }}
        repo-token: ${{ inputs.repo-token }}

    - name: Check for cache hit on default branch
      # <branch_name> (default)
      if: |
        ! (steps.cache-hit-ref.outputs.cache-hit == 'true') &&
        ! (steps.cache-hit-head-ref.outputs.cache-hit == 'true') &&
        ! (steps.cache-hit-pr-base.outputs.cache-hit == 'true') &&
        ! (github.ref == format('refs/heads/{0}', github.event.repository.default_branch))
      uses: pascallj/cache-key-check/.github/actions/api-cache-hit@v1
      id: cache-hit-default-branch
      with:
        key: ${{ inputs.key }}
        ref: refs/heads/${{ github.event.repository.default_branch }}
        repo-token: ${{ inputs.repo-token }}

    - name: Set cache-hit output
      id: cache-hit
      shell: sh
      run: |
        : Setting cache-hit output variable
        echo "cache-hit=${{ ! (steps.cache-hit-ref.outputs.cache-hit != 'true') ||
          ! (steps.cache-hit-head-ref.outputs.cache-hit != 'true') ||
          ! (steps.cache-hit-pr-base.outputs.cache-hit != 'true') ||
          ! (steps.cache-hit-default-branch.outputs.cache-hit != 'true') }}" >> $GITHUB_OUTPUT

branding:
  icon: 'archive'
  color: 'red'
